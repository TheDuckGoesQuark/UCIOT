University of St Andrews
CS4099

ILNP Routing for IoT

Author:
Jordan Mackie
Supervisor:
Prof Saleem Bhatti
April 4, 2019

Abstract
Declaration
I declare that the material submitted for assessment is my own work except where credit is explicitly given to others by citation or acknowledgement. This work was performed during the current academic year except
where otherwise stated. The main text of this project report is #TODO
NN,NNN words long, including project specification and plan. In submitting this project report to the University of St Andrews, I give permission
for it to be made available for use in accordance with the regulations of the
University Library. I also give permission for the title and abstract to be
published and for copies of the report to be made and supplied at cost to any
bona fide library or research worker, and to be made available on the World
Wide Web. I retain the copyright in this work.

Contents
1 Introduction
1.1 Issues with IP . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.2 ILNP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.3 Goal . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1
1
2
2

2 Context Survey
2.1 Internet Routing and Addressing Architecture . . . . . . . . .
2.2 Energy Effecient Routing Protocols . . . . . . . . . . . . . . .
2.3 IoT in Agriculture . . . . . . . . . . . . . . . . . . . . . . . .

4
4
4
5

3 Protocol Design
6
3.1 Discovery . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6
3.2 Maintenance . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
3.3 Recovery . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
4 ILNP Testbed Implementation
4.1 Wireless Network Emulation . . . . . . . . . . . . . . . . . . .
4.2 Routing and Network Management . . . . . . . . . . . . . . .
4.3 Sensor Emulation . . . . . . . . . . . . . . . . . . . . . . . . .

12
12
14
14

5 Experiment

15

6 Results and Discussion

16

7 Conclusions

17

8 Appendix

18

1

Introduction

Despite the imminent exhaustion of IPv4 addresses [1], IPv6 is still being
adopted slowly [2]. Brittle solutions such as NAT are being used to expand
the IPv4 address space and to avoid the transition costs involved in upgrading
to IPv6. Whilst IPv6 does expand the address space greatly and introduces
functionality such as multicast, the internet protocol itself suffers from many
issues.

1.1

Issues with IP

IP addresses are used both to identify a system and to determine its topological location. [3] lists several of the downsides to this overloading of IP
addresses, and why the protocol was still used despite these concerns.
The separation of concerns that should be achieved by a layered model
is not possible, since the IP address is used by the each layer in some way.
IP addresses can be used in the application layer, and are bound to physical
network interfaces, which goes against the end-to-end argument where each
layer should provide a opaque abstraction to those above it.
The issues with IP are not just semantic. Due to the overloading of the IP
address and the rapid increase in internet connected devices [4], the scalability of the system is being challenged. Implementations of multipath routing
with the intention of balancing load is improving network performance for
the operators that use them, but with IP it places greater stress on the
default-free zone (DFZ) routing information base (RIB). Multihoming is also
being used to improve reliability, but with IP this requires routing entries to
store multiple addresses for one host. An IAB workshop [5] detailed how the
DFZ RIB databases are growing in size exponentially due to the increasing
number of devices and an inability to aggregate address prefixes. With IPv6
allowing for an even larger address space, this problem will only get worse.
Due to the growing number of Internet of Things (IoT) devices, mobility
is also a necessary feature for a networking protocol. Mobile IP currently
requires another entity (a home agent) to track and proxy packets to the
mobile host as it moves from network to network. This mobility is also
problematic for IPSec, which requires that the end system addresses remain
fixed.
Given the difficulty involved in simply migrating from IPv4 to IPv6, it is

1

very doubtful that introducing an entirely different protocol for the internet
would be successful. A backwards compatible solution would likely be the
only solution that would be adopted within a reasonable time frame.

1.2

ILNP

Both multihoming and mobility are far simpler to implement and maintain
if the identity and topological locator of a host are separated, and this is
how the Identifier-Locator Network Protocol functions. [6] proposes ILNPv6,
which implement ILNP with the same address space as IPv6 and the same
packet structure as IPv6, but with different semantics for intepreting the
addresses. ILNPv6 splits the original 128-bits used for an IPv6 address into
two 64-bit fields: the upper bits representing the locator and the lower 64
bits representing the identifier. The version field in the IP header is used
to differentiate between ILNPv6 and IPv6 packets, and routers that don’t
support ILNP can interpret the packets as IP without any issue.
The locator value identifies the subnetwork that a host belongs to, and
a host can have multiple locator values, providing multihoming with smaller
memory requirements for the RIB. The ID part of the address is unique to
the host, and provides a fixed address which can be used at the transport
layer.
Though ILNPv6 is very backwards-compatible, there are still some difficult challenges involved in its deployment. [7] describes how the tight coupling of the C socket API and IP addresses could cause issues in some legacy
applications. ILNPv6 also requires some additions to the Domain Name
System (DNS) to properly support multihoming.

1.3

Goal

The benefits of ILNP are clear for the entire internet infrastructure. The
native support for multihoming and multipath routing is especially beneficial
to typically mobile internet of things (IoT) devices. This project aims to
exemplify these benefits for agricultural sensor networks in particular.
These devices are often restricted by limited battery life, memory, and
computational capabilities. Most routing protocols focus on finding the
shortest route between a source and destination, which often results in a
small number of paths being heavily used and so some nodes are especially
drained due to processing and forwarding of packets. This can result in a
2

network partion once crucial nodes fail (due to loss of battery), rendering a
section of still operational nodes useless. By reducing the networking overhead and attempting to balance traffic across several paths, the network can
remain operational for longer.

3

2

Context Survey

2.1

Internet Routing and Addressing Architecture

ILNP was listed alongside several other solutions to the current challenges
facing the internet infrastructure in RFC6115 [8]. Locator-Identifer Split
Protocol (LISP) also uses locator-idnetifier semantics and has already been
deployed in 60 sites over 10 countries [9]. This ease of deployment is likely
due to the fact that it requires no changes to hosts, and instead only required
updates to core routers to be operational.
Another possible alternative is Routing Architecture for the Next Generation Internet (RANGI) [10]. RANGI again uses the identifier-locator split,
but also has a cryptographic identifier which provides sender identification.

2.2

Energy Effecient Routing Protocols

Wireless sensor networks (WSNs) are typically very mobile with limited
memory and power, and so require optimised routing protocols. Due to the
myriad of situations that IoT devices are used, there is no one-size-fits-all
solution.
[11] classifies differeent routing protocols and provides a survey of protocols for each class. Routing protocols are either:
1. Proactive, where each node maintains a routing table through knowledge sharing with adjacent nodes. Typically involves high overhead
due to regular flooding, but performs better than reactive methods as
mobility increases. Examples include AODV [12] and DSR [13].
2. Reactive, where nodes only seek out routes to remote nodes when one
is required. Very little overhead in networks with low mobility, but
performance degrades quickly as mobility increases. Examples include
OLSR [14].
3. Hybrid, where features of both proactive and reactive protocols are
used.
In typical internet infrastructure, it makes sense to use hop counts and
delay as metrics for working out the ’best’ routes to a destination. However,

4

many protocol for WSNs also account for values such as remaining battery
life, or how much computation the node is willing to commit to networking.
In order to save power, MAC layer protocols will often only listen for
short intervals, or rely on lower power and lower bitrate receivers to fully
wake the host when communication is occuring [15]. This behaviour is one
of the reasons that reactive protocols are increasingly popular for WSNs, as
they don’t have the high risk of signal collision that comes with frequent
updates.

2.3

IoT in Agriculture

The sensitivity of crops to changes in climate and agricultures crucial role
on national economies has naturally resulted in large amounts of research
and development. [16] describe how sensor technology is being used to monitor conditions in greenhouses, fields, and bodies of water. In order to make
accessing this data more convenient and to help automate processes, they
implemented a wireless network of enviromental sensors. These sensors communicate data to a gateway node which makes the data accessible via the
cloud for visualisation and actuation.
[17] propose enviromental sensors but for urban environments with access
to the cloud. By providing cheap montoring and actuating sensors to the
general public, they hope to encourage healthier eating habits, as people
would be able to grow their own vegetables effectively.

5

3

Protocol Design

The protocol used is based on the Ad Hoc On-Demand Distance Vector
(AODV) routing protocol, with added fields to try and account for energy
usage. AODV is a reactive protocol which has three phases: discovery, maintenance, and recovery.

3.1

Discovery

AODV produces a list of hops that a packet can be sent over to reach a
destination by flooding route request packets (RREQs). The route discovery
process is summarised in figure 1, where the leftmost node (1) is requesting
a route to the rightmost node (4).

Figure 1: Route Discovery Overview
Figure 2 shows how RREQs are processed at each node. The destination
node replies to all route requests for it, as this can provide multiple paths to
the requesting node. Intermediate nodes however only forward requests based
on whether or not they’ve seen them already. This can be established based
on the request ID, which coupled with the source ID in the ILNP packet
header can identify duplicate requests. Otherwise if this node’s identifier
already appears in the path so far, then it can also be discarded. These

6

checks reduce unecessary duplication of request packets and avoid loops in
the resulting paths.
When using ILNP instead of IP with AODV, packets can be routed based
on the identifier alone, and this can result in multiple paths to the same node.
This provides robust communication if the end destination is multihomed (i.e.
has interfaces to multiple locators), with less complexity than in IP. It also
makes it easier to identify disjoint paths as the node has a single name in
the network, which wouldn’t be the case in IP multihoming.

Figure 2: Route Request (RREQ) Flow
Once the RREQ reaches its destination, or any intermidiate node that
already has a path cached to the that destination, a Route Reply (RRPLY) is
generated by copying the full path from the RREQ or route cache and sending
it back along the same path it arrived to the requesting node. Figure 3 shows
the processing that occurs at each node.
By forwarding RRPLYs along the reverse of the path that they contain,
we ensure that the route hasn’t broken between creation and reception of the
route request. Intermediate nodes can filter erraneous route replies by only
considering those where they know the next hop neighbour is still available.
This only works if we assume that all links are bidrectional which is
not always the case especially in heterogenous WSNs, due to differences in
transceiver ranges. [18] shows that accounting for unidirectional links in
7

a protocol does not provide much benefit compared to the increased overhead. Also in our scenario, the nodes are likely to be homogenous and evenly
spaced, so transceiver power can be assumed to be equal throughout, with
no interference hot spots.

Figure 3: Route Reply (RRPLY) Flow
The structure of the route request is the same as in RFC3561 [12], but
with an extra λ field in the header. This value provides a metric for determining the lifespan of a route, and is calculated for an individual node using
equation 1, and visualised in Figure 4.
λ = 1 − (1 − E)2

(1)

where L is the % of load the node is willing to give to networking, and E is
the % battery remaining. It is based on the equation for λ in [19], adjusted so
that E = 0 occurs when the battery is empty. The effect of decreasing E was
chosen so that the value of λ would be similiar during network initialization,
but to avoid network partions smaller values of E would have a greater effect
on λ. Each node calculates this value before adding their ID to the path in
the RREQ, and only changes the field in the packet if its calculated value is
lower.
[19] also included a load balancing factor that would account for the
number of neighbours a node had, and this was considered for use in the
AODV implementation. Instead of using the number of neighbours as in
8

their link state protocol, we could use the number of nodes using a route
that passed through this node. This value could be ascertained by counting
the number of unique source IDs of packets that were forwardded. However,
defining a maximum in order to normalise this factor would place restrictions
on how large the network could grow. Too large and the factor has no real
effect, too small and it would reduce to zero making the metric meaningless
for nodes further upstream. If this number could be supplied however, it
would help other nodes choose routes that aren’t being used as heavily, which
would be very beneficial for the lifespan of the network.
1
0.8
0.6
λ
0.4
0.2
0

0

0.2

0.4

0.6

0.8

1

E
Figure 4: Plot of Equation 1

3.2

Maintenance

In order to check if neighbours are still live, HELLO messages are exchanged
at regular intervals between neighbouring nodes. These messages also provide
neighbour discovery as they are limited to one hop, therefore the source ID
can be mapped to the arriving IPv6 address in the emulated link layer.
Figure 5 shows how the HELLO messages are processed. If a node fails
to deliver a hello messages after a certain interval, then it’s neighbours will
begin the route recovery process.

9

Figure 5: Hello Flow
Cached routes will also expire after some time to trigger another route
request if required. This allows nodes to learn if a path is under heavy load,
and ensures that a route will be corrected if for some reason the recovery
process is not completed.

3.3

Recovery

If the keepalive process fails for a neighbour, then a node will forward a
RERR to all previous nodes in any paths it takes part in, shown in figure 6.

Figure 6: Route Error (RERR) Flow
Any packets that were sent between the failure of the link and the receiving of a route error will most likely be dropped, and future packets will be

10

delayed as route discovery will have to take place again unless this node is
aware of a disjoint path to the destination.

11

4

ILNP Testbed Implementation

Due to the recency of ILNPv6, there does not currently exist software for emulating wireless ILNP networks as there is for IP, therefore a custom testbed
had to be implemented.
The testing environment was implemented using Python 3.7. The project
has three main components: The wireless network emulation, routing and
network management, and sensor emulation. Figure 7 shows the components
with the flow of messages.

Figure 7: Implementation Structure

4.1

Wireless Network Emulation

Emulating wireless communication was achieved by building an overlay network using UDP with multicast. A single UDP socket provided a communi12

cation endpoint.
A multicast group exists for each node ID, and so neighbours of a node
would join the multicast groups of their neighbours in order to receive broadcasted packets. Figure 8 shows the ranges of each sensors radio signal as
dashed lines, where each node within the range joins the multicast group.

Figure 8: Wireless broadcast emulation using multicast
IPv4 uses the Address Resolution Protocol (ARP) and IPv6 uses Neighbour Discovery (ND) in order to produce a mapping between IP addresses
and the link layer addresses of other machines in a local network. In our
overlay network, the IP addresses of the underlying network could be treated
as MAC addresses. This would allow us to emulate neighbour discovery in
ILNPv6, and provide unicast communication once a mapping between these
virtual link layer addresses and ILNP IDs were obtained via broadcasted
messages.
The network interface abstraction provided the following methods:
1. send: For unicast communication.
2. broadcast: For establishing neighbours or flooding packets.
3. receive: For receiving packets, broadcast or unicast.

13

A daemon thread continuously polls the network interface for incoming
data. It then parses the contents of the packet and records the source IDs
and source IP addresses of any neighbourhood discovery packets for later
communication.
All polling functions included a timeout in order for each thread to check
if it has been asked to terminate, if for example the power levels had reached
a critical level.

4.2

Routing and Network Management

The router polls the incoming packet queue and decides the next course of
action using the processes described in section 3. The control plane handles
any control packets or any packets that can’t be forwarded using the current
forwarding table.
# TODO Finish description of control
#https://ieeexplore.ieee.org/document/7993954 to fix route reply storm
issue: add jitter before responding with route reply and listen for other replies

4.3

Sensor Emulation

The sensor initialises the ILNPSocket, and depending on whether or not it
is configured to operate as the sink (where all the data from every node is
collected) begins either polling for packets or sending ’readings’ at intervals.
To mock realistic application data, a random fluctuation is applied to a
series of values that would be relevant in our scenario: temperature, humidity,
pressure, and luminosity [16].
Only the ID of the sink is known by each node, which is all that should be
necessary when using ILNP to route a packet. If it was possible to provide
a FQDN for the sink node then the addressing scheme would be abstracted
also, but emulating a DNS was deemed unecessary for the experiment.

14

5

Experiment
1. Discuss aim of experiment (to measure effeciency of the used routing
protocol with ILNP, and compare to IP).
2. Explain case study, with reference to source (i.e. agricultural sensor
setup)
3. Use visuals to show locators to real life position and sensor radi
4. Discuss experiment configuration (how machines were chosen, results
collected, battery life simulated, etc)
5. discuss choice of metrics, justifcation and how to compare results.

Figure 9: WSN layout with example route.

15

6

Results and Discussion
1. Show heat map of results
2. Explain features of heat map
3. Describe the behaviour if IP was used instead through analysis
4. Discuss weaknesses with experiment

16

7

Conclusions

Improve AODV to use locator for ’approximate’ routing, then complete path
once reaches locator Mercy message to send from nodes under heavy load to
try and request downstream nodes to use different paths.
1. was the goal met, and if so how well?
2. future work with ILNP, possible suggestions of better alternatives to
the routing protocol used.

17

8

Appendix
1. Instructions on installing, and executing and using the python module,
and how to configure the experiments.

References
[1] RIPE NCC.
Number of Remaining IPv4 Addresses.
https:
//labs.ripe.net/statistics/number-of-remaining-ipv4addresses-daily.
[2] Google. Ipv6 adoption.
statistics.html.

https://www.google.com/intl/en/ipv6/

[3] Brian E. Carpenter. Ip addresses considered harmful. SIGCOMM Comput. Commun. Rev., 44(2):65–69, apr 2014.
[4] Statista. Number of connected devices worldwide in 2014 and 2020,
by device (in millions). https://www.statista.com/statistics/
512650/worldwide-connected-devices-amount/.
[5] Ed D. Meyer, Ed. L. Zhang, and Ed K. Fall. Report from the IAB Workshop on Routing and Addressing. RFC 4984, RFC Editor, September
2007.
[6] R. Atkinson, S. Bhatti, and S. Hailes. Evolving the internet architecture
through naming. IEEE Journal on Selected Areas in Communications,
28(8):1319–1325, October 2010.
[7] Saleem Bhatti, Ditchaphong Phoomikiattisak, and Bruce Simpson. Ip
without ip addresses. pages 41–48, 11 2016.
[8] Ed T. Li. Recommendation for a Routing Architecture. Informational
6115, Internet Research Task Force (IRTF), February 2011.
[9] Nahla Abid. Design of a user-level naming solution for the future Internet. Theses, Télécom Bretagne ; Université de Rennes 1, January
2015.

18

[10] X Xu and M Lu. Routing Architecture of Next-Generation Internet
(RANGI), pages 83–97. 01 2013.
[11] Noman Shabbir and Syed Rizwan Hassan. Routing protocols for wireless sensor networks (wsns). In Philip Sallis, editor, Wireless Sensor
Networks, chapter 2. IntechOpen, Rijeka, 2017.
[12] C. Perkins, E. Belding-Royer, and S. Das. Ad hoc On-Demand Distance
Vector (AODV) Routing. Experimental 3561, Network Working Group,
July 2003.
[13] D. Johnson, Y. Hu, and D. Maltz. The Dynamic Source Routing Protocol (DSR) for Mobile Ad Hoc Networks for IPv4. RFC 4728, Network
Working Group, February 2007.
[14] T. Clausen and P. Jacquet. Optimized Link State Routing Protocol
(OLSR). Experimental 3626, Network Working Group, October 2003.
[15] R. C. Shah and J. M. Rabaey. Energy aware routing for low energy
ad hoc sensor networks. In 2002 IEEE Wireless Communications and
Networking Conference Record. WCNC 2002 (Cat. No.02TH8609), volume 1, pages 350–355 vol.1, March 2002.
[16] T. Cao-hoang and C. N. Duy. Environment monitoring system for agricultural application based on wireless sensor network. In 2017 Seventh International Conference on Information Science and Technology
(ICIST), pages 99–102, April 2017.
[17] G. Panda and T. Saha. Building of low cost reliable wireless sensor network for smart indoor agriculture products. In 2018 2nd International Conference on Electronics, Materials Engineering NanoTechnology (IEMENTech), pages 1–5, May 2018.
[18] Mahesh K. Marina and Samir R. Das. Routing performance in the
presence of unidirectional links in multihop wireless networks. In Proceedings of the 3rd ACM International Symposium on Mobile Ad Hoc
Networking &Amp; Computing, MobiHoc ’02, pages 12–23, New York,
NY, USA, 2002. ACM.
[19] J. Lloret, M. Garcia, F. Boronat, and J. Tomas. A group-based protocol
for large wireless ad-hoc and sensor networks. In NOMS Workshops 2008
19

- IEEE Network Operations and Management Symposium Workshops,
pages 7–14, April 2008.

20

